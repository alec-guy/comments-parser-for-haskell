[S (SingleLineComment (Symbol "--") (Comment " |")),S (SingleLineComment (Symbol "--") (Comment " Module      :  Text.Megaparsec.Error")),S (SingleLineComment (Symbol "--") (Comment " Copyright   :  \9516\8976 2015\915\199\244present Megaparsec contributors")),S (SingleLineComment (Symbol "--") (Comment " License     :  FreeBSD")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " Maintainer  :  Mark Karpov <markkarpov92@gmail.com>")),S (SingleLineComment (Symbol "--") (Comment " Stability   :  experimental")),S (SingleLineComment (Symbol "--") (Comment " Portability :  portable")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " Parse errors. The current version of Megaparsec supports typed errors")),S (SingleLineComment (Symbol "--") (Comment " instead of 'String'-based ones. This gives a lot of flexibility in")),S (SingleLineComment (Symbol "--") (Comment " describing what exactly went wrong as well as a way to return arbitrary")),S (SingleLineComment (Symbol "--") (Comment " data in case of failure.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " You probably do not want to import this module directly because")),S (SingleLineComment (Symbol "--") (Comment " \"Text.Megaparsec\" re-exports it anyway.")),S (SingleLineComment (Symbol "--") (Comment " * Parse error type")),S (SingleLineComment (Symbol "--") (Comment " * Pretty-printing")),S (SingleLineComment (Symbol "--") (Comment "--------------------------------------------------------------------------")),S (SingleLineComment (Symbol "--") (Comment " Parse error type")),S (SingleLineComment (Symbol "--") (Comment " | A data type that is used to represent \915\199\163unexpected\\/expected\915\199\165 items in")),S (SingleLineComment (Symbol "--") (Comment " 'ParseError'. It is parametrized over the token type @t@.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 5.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Non-empty stream of tokens")),S (SingleLineComment (Symbol "--") (Comment " | Label (cannot be empty)")),S (SingleLineComment (Symbol "--") (Comment " | End of input")),S (SingleLineComment (Symbol "--") (Comment " | Additional error data, extendable by user. When no custom data is")),S (SingleLineComment (Symbol "--") (Comment " necessary, the type is typically indexed by 'Void' to \915\199\163cancel\915\199\165 the")),S (SingleLineComment (Symbol "--") (Comment " 'ErrorCustom' constructor.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 6.0.0")),S (SingleLineComment (Symbol "--") (Comment " | 'fail' has been used in parser monad")),S (SingleLineComment (Symbol "--") (Comment " | Incorrect indentation error: desired ordering between reference")),S (SingleLineComment (Symbol "--") (Comment " level and actual level, reference indentation level, actual")),S (SingleLineComment (Symbol "--") (Comment " indentation level")),S (SingleLineComment (Symbol "--") (Comment " | Custom error data")),S (SingleLineComment (Symbol "--") (Comment " | @'ParseError' s e@ represents a parse error parametrized over the")),S (SingleLineComment (Symbol "--") (Comment " stream type @s@ and the custom data @e@.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " 'Semigroup' and 'Monoid' instances of the data type allow us to merge")),S (SingleLineComment (Symbol "--") (Comment " parse errors from different branches of parsing. When merging two")),S (SingleLineComment (Symbol "--") (Comment " 'ParseError's, the longest match is preferred; if positions are the same,")),S (SingleLineComment (Symbol "--") (Comment " custom data sets and collections of message items are combined. Note that")),S (SingleLineComment (Symbol "--") (Comment " fancy errors take precedence over trivial errors in merging.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Trivial errors, generated by the Megaparsec's machinery. The data")),S (SingleLineComment (Symbol "--") (Comment " constructor includes the offset of error, unexpected token (if any),")),S (SingleLineComment (Symbol "--") (Comment " and expected tokens.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " Type of the first argument was changed in the version /7.0.0/.")),S (SingleLineComment (Symbol "--") (Comment " | Fancy, custom errors.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " Type of the first argument was changed in the version /7.0.0/.")),S (SingleLineComment (Symbol "--") (Comment " | Modify the custom data component in a parse error. This could be done")),S (SingleLineComment (Symbol "--") (Comment " via 'fmap' if not for the 'Ord' constraint.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Get the offset of a 'ParseError'.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Set the offset of a 'ParseError'.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 8.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Merge two error data structures into one joining their collections of")),S (SingleLineComment (Symbol "--") (Comment " message items and preferring the longest match. In other words, earlier")),S (SingleLineComment (Symbol "--") (Comment " error message is discarded. This may seem counter-intuitive, but")),S (SingleLineComment (Symbol "--") (Comment " 'mergeError' is only used to merge error messages of alternative branches")),S (SingleLineComment (Symbol "--") (Comment " of parsing and in this case longest match should be preferred.")),S (SingleLineComment (Symbol "--") (Comment " NOTE The logic behind this merging is that since we only combine")),S (SingleLineComment (Symbol "--") (Comment " parse errors that happen at exactly the same position, all the")),S (SingleLineComment (Symbol "--") (Comment " unexpected items will be prefixes of input stream at that position or")),S (SingleLineComment (Symbol "--") (Comment " labels referring to the same thing. Our aim here is to choose the")),S (SingleLineComment (Symbol "--") (Comment " longest prefix (merging with labels and end of input is somewhat")),S (SingleLineComment (Symbol "--") (Comment " arbitrary, but is necessary because otherwise we can't make")),S (SingleLineComment (Symbol "--") (Comment " ParseError lawful Monoid and have nice parse errors at the same")),S (SingleLineComment (Symbol "--") (Comment " time).")),S (SingleLineComment (Symbol "--") (Comment " | A non-empty collection of 'ParseError's equipped with 'PosState' that")),S (SingleLineComment (Symbol "--") (Comment " allows us to pretty-print the errors efficiently and correctly.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | A collection of 'ParseError's that is sorted by parse error offsets")),S (SingleLineComment (Symbol "--") (Comment " | The state that is used for line\\/column calculation")),S (SingleLineComment (Symbol "--") (Comment " | Attach 'SourcePos'es to items in a 'Traversable' container given that")),S (SingleLineComment (Symbol "--") (Comment " there is a projection allowing us to get an offset per item.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " Items must be in ascending order with respect to their offsets.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | How to project offset from an item (e.g. 'errorOffset')")),S (SingleLineComment (Symbol "--") (Comment " | The collection of items")),S (SingleLineComment (Symbol "--") (Comment " | Initial 'PosState'")),S (SingleLineComment (Symbol "--") (Comment " | The collection with 'SourcePos'es added and the final 'PosState'")),S (SingleLineComment (Symbol "--") (Comment "--------------------------------------------------------------------------")),S (SingleLineComment (Symbol "--") (Comment " Pretty-printing")),S (SingleLineComment (Symbol "--") (Comment " | The type class defines how to print a custom component of 'ParseError'.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 5.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a component of 'ParseError'.")),S (SingleLineComment (Symbol "--") (Comment " | Length of the error component in characters, used for highlighting of")),S (SingleLineComment (Symbol "--") (Comment " parse errors in input string.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseErrorBundle'. All 'ParseError's in the bundle will")),S (SingleLineComment (Symbol "--") (Comment " be pretty-printed in order, by applying a provided format function, with")),S (SingleLineComment (Symbol "--") (Comment " a single pass over the input stream.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 9.7.0")),S (SingleLineComment (Symbol "--") (Comment " | Format function for a single 'ParseError'")),S (SingleLineComment (Symbol "--") (Comment " | Parse error bundle to display")),S (SingleLineComment (Symbol "--") (Comment " | Textual rendition of the bundle")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseErrorBundle'. All 'ParseError's in the bundle will")),S (SingleLineComment (Symbol "--") (Comment " be pretty-printed in order together with the corresponding offending")),S (SingleLineComment (Symbol "--") (Comment " lines by doing a single pass over the input stream. The rendered 'String'")),S (SingleLineComment (Symbol "--") (Comment " always ends with a newline.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Parse error bundle to display")),S (SingleLineComment (Symbol "--") (Comment " | Textual rendition of the bundle")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseErrorBundle'. All 'ParseError's in the bundle will")),S (SingleLineComment (Symbol "--") (Comment " be pretty-printed in order by doing a single pass over the input stream.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " The rendered format is suitable for custom GHC pre-processors (as can be")),S (SingleLineComment (Symbol "--") (Comment " specified with -F -pgmF).")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 9.7.0")),S (SingleLineComment (Symbol "--") (Comment " | Parse error bundle to display")),S (SingleLineComment (Symbol "--") (Comment " | Textual rendition of the bundle")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseError'. The rendered 'String' always ends with a")),S (SingleLineComment (Symbol "--") (Comment " newline.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 5.0.0")),S (SingleLineComment (Symbol "--") (Comment " | Parse error to render")),S (SingleLineComment (Symbol "--") (Comment " | Result of rendering")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a textual part of a 'ParseError', that is, everything")),S (SingleLineComment (Symbol "--") (Comment " except for its position. The rendered 'String' always ends with a")),S (SingleLineComment (Symbol "--") (Comment " newline.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 5.1.0")),S (SingleLineComment (Symbol "--") (Comment " | Parse error to render")),S (SingleLineComment (Symbol "--") (Comment " | Result of rendering")),S (SingleLineComment (Symbol "--") (Comment "--------------------------------------------------------------------------")),S (SingleLineComment (Symbol "--") (Comment " Helpers")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print an 'ErrorItem'.")),S (SingleLineComment (Symbol "--") (Comment "")),S (SingleLineComment (Symbol "--") (Comment " @since 9.4.0")),S (SingleLineComment (Symbol "--") (Comment " | Get length of the \915\199\163pointer\915\199\165 to display under a given 'ErrorItem'.")),S (SingleLineComment (Symbol "--") (Comment " | Pretty-print an 'ErrorFancy'.")),S (SingleLineComment (Symbol "--") (Comment " | Get length of the \915\199\163pointer\915\199\165 to display under a given 'ErrorFancy'.")),S (SingleLineComment (Symbol "--") (Comment " | Transform a list of error messages into their textual representation.")),S (SingleLineComment (Symbol "--") (Comment " | Prefix to prepend")),S (SingleLineComment (Symbol "--") (Comment " | Collection of messages")),S (SingleLineComment (Symbol "--") (Comment " | Result of rendering")),S (SingleLineComment (Symbol "--") (Comment " | Print a pretty list where items are separated with commas and the word")),S (SingleLineComment (Symbol "--") (Comment " \915\199\163or\915\199\165 according to the rules of English punctuation."))]
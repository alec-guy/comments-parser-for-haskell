[Just (S (SingleLineComment (Symbol "--") (Comment " |"))),Just (S (SingleLineComment (Symbol "--") (Comment " Module      :  Text.Megaparsec.Error"))),Just (S (SingleLineComment (Symbol "--") (Comment " Copyright   :  \9516\8976 2015\915\199\244present Megaparsec contributors"))),Just (S (SingleLineComment (Symbol "--") (Comment " License     :  FreeBSD"))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " Maintainer  :  Mark Karpov <markkarpov92@gmail.com>"))),Just (S (SingleLineComment (Symbol "--") (Comment " Stability   :  experimental"))),Just (S (SingleLineComment (Symbol "--") (Comment " Portability :  portable"))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " Parse errors. The current version of Megaparsec supports typed errors"))),Just (S (SingleLineComment (Symbol "--") (Comment " instead of 'String'-based ones. This gives a lot of flexibility in"))),Just (S (SingleLineComment (Symbol "--") (Comment " describing what exactly went wrong as well as a way to return arbitrary"))),Just (S (SingleLineComment (Symbol "--") (Comment " data in case of failure."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " You probably do not want to import this module directly because"))),Just (S (SingleLineComment (Symbol "--") (Comment " \"Text.Megaparsec\" re-exports it anyway."))),Just (S (SingleLineComment (Symbol "--") (Comment " * Parse error type"))),Just (S (SingleLineComment (Symbol "--") (Comment " * Pretty-printing"))),Just (S (SingleLineComment (Symbol "--") (Comment "--------------------------------------------------------------------------"))),Just (S (SingleLineComment (Symbol "--") (Comment " Parse error type"))),Just (S (SingleLineComment (Symbol "--") (Comment " | A data type that is used to represent \915\199\163unexpected\\/expected\915\199\165 items in"))),Just (S (SingleLineComment (Symbol "--") (Comment " 'ParseError'. It is parametrized over the token type @t@."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 5.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Non-empty stream of tokens"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Label (cannot be empty)"))),Just (S (SingleLineComment (Symbol "--") (Comment " | End of input"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Additional error data, extendable by user. When no custom data is"))),Just (S (SingleLineComment (Symbol "--") (Comment " necessary, the type is typically indexed by 'Void' to \915\199\163cancel\915\199\165 the"))),Just (S (SingleLineComment (Symbol "--") (Comment " 'ErrorCustom' constructor."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 6.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | 'fail' has been used in parser monad"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Incorrect indentation error: desired ordering between reference"))),Just (S (SingleLineComment (Symbol "--") (Comment " level and actual level, reference indentation level, actual"))),Just (S (SingleLineComment (Symbol "--") (Comment " indentation level"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Custom error data"))),Just (S (SingleLineComment (Symbol "--") (Comment " | @'ParseError' s e@ represents a parse error parametrized over the"))),Just (S (SingleLineComment (Symbol "--") (Comment " stream type @s@ and the custom data @e@."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " 'Semigroup' and 'Monoid' instances of the data type allow us to merge"))),Just (S (SingleLineComment (Symbol "--") (Comment " parse errors from different branches of parsing. When merging two"))),Just (S (SingleLineComment (Symbol "--") (Comment " 'ParseError's, the longest match is preferred; if positions are the same,"))),Just (S (SingleLineComment (Symbol "--") (Comment " custom data sets and collections of message items are combined. Note that"))),Just (S (SingleLineComment (Symbol "--") (Comment " fancy errors take precedence over trivial errors in merging."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Trivial errors, generated by the Megaparsec's machinery. The data"))),Just (S (SingleLineComment (Symbol "--") (Comment " constructor includes the offset of error, unexpected token (if any),"))),Just (S (SingleLineComment (Symbol "--") (Comment " and expected tokens."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " Type of the first argument was changed in the version /7.0.0/."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Fancy, custom errors."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " Type of the first argument was changed in the version /7.0.0/."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Modify the custom data component in a parse error. This could be done"))),Just (S (SingleLineComment (Symbol "--") (Comment " via 'fmap' if not for the 'Ord' constraint."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Get the offset of a 'ParseError'."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Set the offset of a 'ParseError'."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 8.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Merge two error data structures into one joining their collections of"))),Just (S (SingleLineComment (Symbol "--") (Comment " message items and preferring the longest match. In other words, earlier"))),Just (S (SingleLineComment (Symbol "--") (Comment " error message is discarded. This may seem counter-intuitive, but"))),Just (S (SingleLineComment (Symbol "--") (Comment " 'mergeError' is only used to merge error messages of alternative branches"))),Just (S (SingleLineComment (Symbol "--") (Comment " of parsing and in this case longest match should be preferred."))),Just (S (SingleLineComment (Symbol "--") (Comment " NOTE The logic behind this merging is that since we only combine"))),Just (S (SingleLineComment (Symbol "--") (Comment " parse errors that happen at exactly the same position, all the"))),Just (S (SingleLineComment (Symbol "--") (Comment " unexpected items will be prefixes of input stream at that position or"))),Just (S (SingleLineComment (Symbol "--") (Comment " labels referring to the same thing. Our aim here is to choose the"))),Just (S (SingleLineComment (Symbol "--") (Comment " longest prefix (merging with labels and end of input is somewhat"))),Just (S (SingleLineComment (Symbol "--") (Comment " arbitrary, but is necessary because otherwise we can't make"))),Just (S (SingleLineComment (Symbol "--") (Comment " ParseError lawful Monoid and have nice parse errors at the same"))),Just (S (SingleLineComment (Symbol "--") (Comment " time)."))),Just (S (SingleLineComment (Symbol "--") (Comment " | A non-empty collection of 'ParseError's equipped with 'PosState' that"))),Just (S (SingleLineComment (Symbol "--") (Comment " allows us to pretty-print the errors efficiently and correctly."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | A collection of 'ParseError's that is sorted by parse error offsets"))),Just (S (SingleLineComment (Symbol "--") (Comment " | The state that is used for line\\/column calculation"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Attach 'SourcePos'es to items in a 'Traversable' container given that"))),Just (S (SingleLineComment (Symbol "--") (Comment " there is a projection allowing us to get an offset per item."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " Items must be in ascending order with respect to their offsets."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | How to project offset from an item (e.g. 'errorOffset')"))),Just (S (SingleLineComment (Symbol "--") (Comment " | The collection of items"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Initial 'PosState'"))),Just (S (SingleLineComment (Symbol "--") (Comment " | The collection with 'SourcePos'es added and the final 'PosState'"))),Just (S (SingleLineComment (Symbol "--") (Comment "--------------------------------------------------------------------------"))),Just (S (SingleLineComment (Symbol "--") (Comment " Pretty-printing"))),Just (S (SingleLineComment (Symbol "--") (Comment " | The type class defines how to print a custom component of 'ParseError'."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 5.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a component of 'ParseError'."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Length of the error component in characters, used for highlighting of"))),Just (S (SingleLineComment (Symbol "--") (Comment " parse errors in input string."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseErrorBundle'. All 'ParseError's in the bundle will"))),Just (S (SingleLineComment (Symbol "--") (Comment " be pretty-printed in order, by applying a provided format function, with"))),Just (S (SingleLineComment (Symbol "--") (Comment " a single pass over the input stream."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 9.7.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Format function for a single 'ParseError'"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Parse error bundle to display"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Textual rendition of the bundle"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseErrorBundle'. All 'ParseError's in the bundle will"))),Just (S (SingleLineComment (Symbol "--") (Comment " be pretty-printed in order together with the corresponding offending"))),Just (S (SingleLineComment (Symbol "--") (Comment " lines by doing a single pass over the input stream. The rendered 'String'"))),Just (S (SingleLineComment (Symbol "--") (Comment " always ends with a newline."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 7.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Parse error bundle to display"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Textual rendition of the bundle"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseErrorBundle'. All 'ParseError's in the bundle will"))),Just (S (SingleLineComment (Symbol "--") (Comment " be pretty-printed in order by doing a single pass over the input stream."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " The rendered format is suitable for custom GHC pre-processors (as can be"))),Just (S (SingleLineComment (Symbol "--") (Comment " specified with -F -pgmF)."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 9.7.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Parse error bundle to display"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Textual rendition of the bundle"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a 'ParseError'. The rendered 'String' always ends with a"))),Just (S (SingleLineComment (Symbol "--") (Comment " newline."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 5.0.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Parse error to render"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Result of rendering"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print a textual part of a 'ParseError', that is, everything"))),Just (S (SingleLineComment (Symbol "--") (Comment " except for its position. The rendered 'String' always ends with a"))),Just (S (SingleLineComment (Symbol "--") (Comment " newline."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 5.1.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Parse error to render"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Result of rendering"))),Just (S (SingleLineComment (Symbol "--") (Comment "--------------------------------------------------------------------------"))),Just (S (SingleLineComment (Symbol "--") (Comment " Helpers"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print an 'ErrorItem'."))),Just (S (SingleLineComment (Symbol "--") (Comment ""))),Just (S (SingleLineComment (Symbol "--") (Comment " @since 9.4.0"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Get length of the \915\199\163pointer\915\199\165 to display under a given 'ErrorItem'."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Pretty-print an 'ErrorFancy'."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Get length of the \915\199\163pointer\915\199\165 to display under a given 'ErrorFancy'."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Transform a list of error messages into their textual representation."))),Just (S (SingleLineComment (Symbol "--") (Comment " | Prefix to prepend"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Collection of messages"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Result of rendering"))),Just (S (SingleLineComment (Symbol "--") (Comment " | Print a pretty list where items are separated with commas and the word"))),Just (S (SingleLineComment (Symbol "--") (Comment " \915\199\163or\915\199\165 according to the rules of English punctuation.")))]